/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BSPC    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E           &kp R  &kp T             &kp Y  &kp U  &kp I             &kp O    &kp P     &kp BSPC
&sk LEFT_GUI  &kp A  &kp S  &kp D           &kp F  &kp G             &kp H  &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&sk LEFT_ALT  &kp Z  &kp X  &kp C           &kp V  &kp B             &kp N  &kp M  &kp COMMA         &kp DOT  &kp FSLH  &mt RSHFT RET
                            &sk LEFT_SHIFT  &mo 1         &kp SPACE         &mo 2  &sk LEFT_CONTROL
            >;

            label = "Base";
        };

        num_sym_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp ESC  &kp EXCL   &kp AT    &kp HASH   &kp DLLR   &kp PRCNT           &kp CARET  &kp AMPS  &kp ASTRK       &kp LPAR         &kp RPAR  &kp DEL
&trans   &kp N1     &kp N2    &kp N3     &kp N4     &kp N5              &kp N6     &kp N7    &kp N8          &kp N9           &kp N0    &kp PIPE
&trans   &kp EQUAL  &kp PLUS  &kp MINUS  &kp UNDER  &kp TILDE           &kp LBKT   &kp RBKT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BSLH  &kp GRAVE
                              &trans     &trans                &kp RET             &trans    &trans
            >;

            label = "Num_Sym";
        };

        nav_fun_layer {
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none          &kp HOME  &kp LS(LC(TAB))  &kp UP_ARROW      &kp LC(TAB)  &kp C_VOLUME_UP    &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none          &kp INS   &kp LEFT         &kp DOWN          &kp RIGHT    &kp C_VOLUME_DOWN  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none          &kp END   &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT   &kp LS(LG(S))      &none
                        &trans   &trans          &trans            &trans           &trans
            >;

            label = "Nav_Fun";
        };

        adjust_layer {
            bindings = <
&bootloader     &trans        &trans        &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR          &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans              &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans                    &trans          &trans  &trans
            >;

            label = "Adjust";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
